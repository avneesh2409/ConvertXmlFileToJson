import React, { useReducer, useEffect } from 'react';
import { store } from './context';
import './custom.css'
import { fetchDataReducer, switchReducer } from './reducers';
import { fetchDataSuccess, fetchDataFailure} from './actions';
import Routers from './router';
import {publisher_options} from './helper/dependency';
import { DefaultRouting, DefaultDomain, DefaultFeed, DefaultPublisher, DefaultRoutingUrl, DefaultDomainUrl, DefaultFeedUrl, DefaultPublisherUrl } from './constants';

const initialState = {
    loading: true,
    data: [],
    error:'',
    currentPage:1,
    postsPerPage:10
}
const App = () => {
    const [state, dispatch] = useReducer(fetchDataReducer, initialState)
    const [switchState, switchDispatch] = useReducer(switchReducer,{key:DefaultDomain,value:true})
    let url = null;
    switch(switchState.key)
    {
        case DefaultRouting:
        url = DefaultRoutingUrl
        break;
        case DefaultDomain:
        url = DefaultDomainUrl
        break;
        case DefaultFeed:
        url = DefaultFeedUrl
        break;
        case DefaultPublisher:
        url = DefaultPublisherUrl
        break;
        default:
    }
    useEffect(() => {
        fetch(url, publisher_options)
            .then(json => json.json())
            .then(res => dispatch(fetchDataSuccess(res)))
            .catch(error => dispatch(fetchDataFailure(error.message)))
    }, [url])

    return (
            <store.Provider value={{state,switchState,switchDispatch,dispatch}}>
                <Routers />
            </store.Provider>
    );
}
export default App;